P = ParamSpec('P')
class classmethod(Generic[P, _R_co]):
    @property
    def __func__(self) -> Callable[P, _R_co]: ...
    @property
    def __isabstractmethod__(self) -> bool: ...
    def __init__(self: classmethod[_R_co], __f: Callable[P, _R_co]) -> None: ...
    def __get__(self, __obj: _T, __type: type[_T] | None = ...) -> Callable[P, _R_co]: ...
    if sys.version_info >= (3, 10):
        __name__: str
        __qualname__: str
        __wrapped__: Callable[P, _R_co]
