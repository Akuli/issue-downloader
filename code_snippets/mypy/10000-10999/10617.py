class object:
    __doc__: Optional[str]
    __dict__: Dict[str, Any]
    __slots__: Union[str, Iterable[str]]
    __module__: str
    __annotations__: Dict[str, Any]
    @property
    def __class__(self: _T) -> Type[_T]: ...
    # Ignore errors about type mismatch between property getter and setter
    @__class__.setter
    def __class__(self, __type: Type[object]) -> None: ...  # type: ignore # noqa: F811
    def __init__(self) -> None: ...  # <-- LINE 95
    def __new__(cls) -> Any: ...
    def __setattr__(self, name: str, value: Any) -> None: ...
    def __eq__(self, o: object) -> bool: ...
    def __ne__(self, o: object) -> bool: ...
    def __str__(self) -> str: ...
