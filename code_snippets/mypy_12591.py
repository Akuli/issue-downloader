P = ParamSpec("P")

def foo(x: Callable[P, int], y: Callable[P, int]) -> Callable[P, bool]: ...

def x_y(x: int, y: str) -> int: ...
def y_x(y: int, x: str) -> int: ...

foo(x_y, y_x)  # Argument 1 to "foo" has incompatible type "Callable[[Arg(int, 'x'), Arg(str, 'y')], int]"; expected "Callable[[Arg(int, 'y'), Arg(str, 'x')], int]"
